# To build the image, run `docker build` command from the root of the
# repository:
#
#    docker build -f docker/Dockerfile .
#
# There is an optional PYTHON_VERSION build argument which sets the
# version of python to build against. For example:
#
#    docker build -f docker/Dockerfile --build-arg PYTHON_VERSION=3.10 .
#
# An optional LIBOLM_VERSION build argument which sets the
# version of libolm to build against. For example:
#
#    docker build -f docker/Dockerfile --build-arg LIBOLM_VERSION=3.2.10 .
#


##
## Creating a builder container
##

# We use an initial docker container to build all of the runtime dependencies,
# then transfer those dependencies to the container we're going to ship,
# before throwing this one away
FROM python:3.10 as builder

##
## Build libolm for matrix-nio e2e support
##

# Install libolm build dependencies
RUN apt-get update && \
    apt-get install -y \
    libolm-dev \
    libolm3 \
    make \
    cmake \
    gcc \
    g++ \
    git \
    libffi-dev \
    python3-dev 

# Install python runtime modules. We do this before copying the source code
# such that these dependencies can be cached
# This speeds up subsequent image builds when the source code is changed
RUN mkdir -p /src/bot
COPY bot/__init__.py /src/bot/
COPY README.md xmpp-bot /src/

# Build the dependencies
COPY setup.py /src/setup.py
RUN pip install --prefix="/python-libs" --no-warn-script-location "/src/.[postgres]"

# Now copy the source code
COPY *.py *.md /src/
COPY bot/*.py /src/bot/

# And build the final module
RUN pip install --prefix="/python-libs" --no-warn-script-location "/src/.[postgres]"

##
## Creating the runtime container
##

# Create the container we'll actually ship. We need to copy libolm and any
# python dependencies that we built above to this container
FROM python:3.10

# Copy python dependencies from the "builder" container
COPY --from=builder /python-libs /usr/local


# Install any native runtime dependencies
RUN apt-get update && \
    apt-get install -y \
    libstdc++ \
    libolm-dev \
    libolm3 

# Specify a volume that holds the config file, SQLite3 database,
# and the matrix-nio store
VOLUME ["/data"]

# Start the bot
ENTRYPOINT ["xmpp-bot", "/data/config.yaml"]
